(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{228:function(t,s,e){"use strict";e.r(s);var a=e(0),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"常用指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用指令"}},[t._v("#")]),t._v(" 常用指令")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("git clone xxx "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// clone远程代码到本地")]),t._v("\n\ngit checkout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b xxxx "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 建立并切换到分支xxxx")]),t._v("\n\ngit branch "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看当前分支的状态")]),t._v("\n\ngit branch "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看分支的最后修改 分支前带*的为还未合并到master分支的 无*的为已经合并到master中的。")]),t._v("\n\ngit status "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看分支及当前修改过的文件")]),t._v("\n\ngit checkout xxxx "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 切换到xxxx分支")]),t._v("\n\ngit add "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加文件到暂存区")]),t._v("\n\ngit branch "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d xxxx "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除分支 如果还未合并到master 则会出现不能删除提示 用-D强制删除")]),t._v("\n\ngit commit "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxxx"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上传到本地git仓库 添加注释信息")]),t._v("\n\ngit merge "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于合并指定分支到当前分支")]),t._v("\n\ngit push "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 推送分支到远程仓库")]),t._v("\n\ngit reset "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("hard "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 撤销工作目录中所有未提交文件的修改内容")]),t._v("\n\ngit fetch "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新git remote中的所有repo所包含的分支的最新commit-id,将其记录到./git/FETCH_HEAD文件中。")]),t._v("\n\ngit pull "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 基于本地的FETCH_HEAD记录与远程仓库的版本号 git fetch获得当前指向的远程分支的后续版本的数据 然后利用git merge将其与本地的当前分支合并")]),t._v("\n\ngit rm "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("r file "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除文件")]),t._v("\n")])])]),e("h3",{attrs:{id:"从其他分支merge个别文件或文件夹"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从其他分支merge个别文件或文件夹"}},[t._v("#")]),t._v(" 从其他分支merge个别文件或文件夹")]),t._v(" "),e("p",[t._v("假定现在有两个分支 "),e("code",[t._v("master")]),t._v(" 和 "),e("code",[t._v("dev")]),t._v("。")]),t._v(" "),e("p",[e("code",[t._v("master")]),t._v(" 的目录结构如下：")]),t._v(" "),e("ul",[e("li",[t._v("folder\n"),e("ul",[e("li",[t._v("test\n"),e("ul",[e("li",[t._v("a.js")])])]),t._v(" "),e("li",[t._v("others")])])])]),t._v(" "),e("p",[e("code",[t._v("dev")]),t._v(" 的目录结构如下：")]),t._v(" "),e("ul",[e("li",[t._v("folder\n"),e("ul",[e("li",[t._v("test\n"),e("ul",[e("li",[t._v("b.js")])])]),t._v(" "),e("li",[t._v("others")])])])]),t._v(" "),e("p",[t._v("这时候我们要将 "),e("code",[t._v("dev")]),t._v(" 中的test合并到master中，有两种做法：")]),t._v(" "),e("ol",[e("li",[t._v("git checkout branch -- file 用branch上的file强制替换当前文件。")]),t._v(" "),e("li",[t._v("智能合并")])]),t._v(" "),e("h4",{attrs:{id:"智能合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#智能合并"}},[t._v("#")]),t._v(" 智能合并")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生成一个master的备份分支")]),t._v("\ngit checkout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b master_temp\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将dev合并到master_temp")]),t._v("\ngit merge dev\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用master_temp上的test替换掉master上的test")]),t._v("\ngit checkout master\ngit checkout master_temp "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" test\n")])])]),e("p",[t._v("智能合并可以保留 "),e("code",[t._v("master")]),t._v(" 原有的东西而不是被 "),e("code",[t._v("dev")]),t._v(" 的对应文件强制覆盖。")])])}),[],!1,null,null,null);s.default=r.exports}}]);