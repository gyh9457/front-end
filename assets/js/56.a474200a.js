(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{442:function(e,t,a){"use strict";a.r(t);var o=a(54),r=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h3",{attrs:{id:"webpack-基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-基础"}},[e._v("#")]),e._v(" webpack 基础")]),e._v(" "),a("h3",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[e._v("#")]),e._v(" 概述")]),e._v(" "),a("blockquote",[a("p",[e._v("本质上，webpack 是一个现代 JavaScript 应用程序的静态模块打包器(module bundler)。当 webpack 处理应用程序时，它会递归地构建一个依赖关系图(dependency graph)，其中包含应用程序需要的每个模块，然后将所有这些模块打包成一个或多个 bundle。")])]),e._v(" "),a("p",[e._v("通过 webpack 可以处理应用中的所有资源。")]),e._v(" "),a("p",[e._v("webpack 内有四个核心概念:")]),e._v(" "),a("ul",[a("li",[e._v("入口 (entry)")])]),e._v(" "),a("blockquote",[a("p",[e._v("入口起点(entry point)指示 webpack 应该使用哪个模块，来作为构建其内部依赖图的开始。进入入口起点后，webpack 会找出有哪些模块和库是入口起点（直接和间接）依赖的。")])]),e._v(" "),a("ul",[a("li",[e._v("出口 (output)")])]),e._v(" "),a("blockquote",[a("p",[e._v("output 属性告诉 webpack 在哪里输出它所创建的 bundles，以及如何命名这些文件。")])]),e._v(" "),a("ul",[a("li",[e._v("loader")])]),e._v(" "),a("blockquote",[a("p",[e._v("loader 让 webpack 能够去处理那些非 JavaScript 文件（webpack 自身只理解 JavaScript）。loader 可以将所有类型的文件转换为 webpack 能够处理的有效模块，然后你就可以利用 webpack 的打包能力，对它们进行处理。")])]),e._v(" "),a("blockquote",[a("p",[e._v("本质上，webpack loader 将所有类型的文件，转换为应用程序的依赖图（和最终的 bundle）可以直接引用的模块。")])]),e._v(" "),a("ul",[a("li",[e._v("插件 (plugins)")])]),e._v(" "),a("blockquote",[a("p",[e._v("loader 被用于转换某些类型的模块，而插件则可以用于执行范围更广的任务。插件的范围包括，从打包优化和压缩，一直到重新定义环境中的变量。插件接口功能极其强大，可以用来处理各种各样的任务。")])]),e._v(" "),a("h4",{attrs:{id:"webpack5-新特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack5-新特性"}},[e._v("#")]),e._v(" webpack5 新特性")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/webpack/changelog-v5/blob/master/README.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("webpack5 新特性"),a("OutboundLink")],1)]),e._v(" "),a("h4",{attrs:{id:"commonjs-commonjs2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-commonjs2"}},[e._v("#")]),e._v(" commonjs && commonjs2")]),e._v(" "),a("p",[a("code",[e._v("commonjs")]),e._v(" 只定义了 "),a("code",[e._v("exports")]),e._v(" 用于导出对象，而 "),a("code",[e._v("module.exports")]),e._v(" 是 "),a("code",[e._v("nodejs")]),e._v(" 对 "),a("code",[e._v("commonjs")]),e._v(" 的实现，实现往往在满足规范的前提下做些扩展，这里把 "),a("code",[e._v("nodejs")]),e._v(" 的这种模块化实现称为 "),a("code",[e._v("commonjs2")]),e._v("。")]),e._v(" "),a("p",[a("code",[e._v("module.exports")]),e._v(" 是 "),a("code",[e._v("nodejs")]),e._v(" 对 "),a("code",[e._v("commonjs")]),e._v(" 的具体实现，"),a("code",[e._v("exports")]),e._v(" 是它的一个别名。")]),e._v(" "),a("p",[e._v("参考 "),a("a",{attrs:{href:"https://github.com/webpack/webpack/issues/1114",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue"),a("OutboundLink")],1)]),e._v(" "),a("h4",{attrs:{id:"todo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#todo"}},[e._v("#")]),e._v(" TODO")]),e._v(" "),a("ul",[a("li",[e._v("性能优化")]),e._v(" "),a("li",[e._v("热更新原理")]),e._v(" "),a("li",[e._v("Scaffolding")])]),e._v(" "),a("h4",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/gyh9457/simple-webpack",target:"_blank",rel:"noopener noreferrer"}},[e._v("示例工程 simple-webpack"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/5df884ad6fb9a0164e7f979d#heading-16",target:"_blank",rel:"noopener noreferrer"}},[e._v("Webpack 深入浅出"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);